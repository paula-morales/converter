{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction BlockCurrencyComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const curr_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", curr_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", curr_r1, \" \");\n  }\n}\n\nexport let BlockCurrencyComponent = /*#__PURE__*/(() => {\n  class BlockCurrencyComponent {\n    constructor() {\n      this.currencyChanged = new EventEmitter();\n      this.amountChanged = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    ngOnChanges(changes) {\n      if (changes.amount && changes.amount.currentValue > 0) {\n        this.message = '';\n      }\n    }\n\n    selectCurrency(event) {\n      const currencySelected = event.target.value;\n      this.currencyChanged.emit(currencySelected);\n    }\n\n    onChangeAmount(newAmount) {\n      if (newAmount > 0) {\n        this.amountChanged.emit(newAmount);\n        this.message = '';\n      } else {\n        this.message = 'Amount should be a number greater than 0';\n      }\n    }\n\n  }\n\n  BlockCurrencyComponent.ɵfac = function BlockCurrencyComponent_Factory(t) {\n    return new (t || BlockCurrencyComponent)();\n  };\n\n  BlockCurrencyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BlockCurrencyComponent,\n    selectors: [[\"block-currency\"]],\n    inputs: {\n      currency: \"currency\",\n      amount: \"amount\",\n      allCurrencies: \"allCurrencies\"\n    },\n    outputs: {\n      currencyChanged: \"currencyChanged\",\n      amountChanged: \"amountChanged\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 8,\n    vars: 4,\n    consts: [[1, \"block-currency\", \"col-12\", \"px-0\"], [1, \"block-currency__dropdown-wrapper\", \"row\", \"mx-0\"], [1, \"block-currency__dropdown\", \"form-select\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"class\", \"block-currency__dropdown-option\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"block-currency__input-wrapper\", \"row\", \"mx-0\", \"mt-2\", \"justify-content-between\", \"align-items-center\"], [\"type\", \"number\", \"min\", \"1\", 1, \"block-currency__input\", \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"block-currency__message\", \"text-danger\", \"mt-2\"], [1, \"block-currency__dropdown-option\", 3, \"value\"]],\n    template: function BlockCurrencyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"select\", 2);\n        i0.ɵɵlistener(\"change\", function BlockCurrencyComponent_Template_select_change_2_listener($event) {\n          return ctx.selectCurrency($event);\n        })(\"ngModelChange\", function BlockCurrencyComponent_Template_select_ngModelChange_2_listener($event) {\n          return ctx.currency = $event;\n        });\n        i0.ɵɵtemplate(3, BlockCurrencyComponent_option_3_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function BlockCurrencyComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.amount = $event;\n        })(\"ngModelChange\", function BlockCurrencyComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.onChangeAmount($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.currency);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allCurrencies);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.amount);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.message);\n      }\n    },\n    directives: [i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgForOf, i1.MinValidator, i1.NumberValueAccessor, i1.DefaultValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return BlockCurrencyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}